#
# Copyright (c) 2019, 2020, Oracle and/or its affiliates. All rights reserved.
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
#
# This code is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License version 2 only, as
# published by the Free Software Foundation.  Oracle designates this
# particular file as subject to the "Classpath" exception as provided
# by Oracle in the LICENSE file that accompanied this code.
#
# This code is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# version 2 for more details (a copy is included in the LICENSE file that
# accompanied this code).
#
# You should have received a copy of the GNU General Public License version
# 2 along with this work; if not, write to the Free Software Foundation,
# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
#
# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
# or visit www.oracle.com if you need additional information or have any
# questions.
#

include LibCommon.gmk

################################################################################
# Create the resolver library

$(eval $(call SetupJdkLibrary, BUILD_LIBRESOLVER, \
    NAME := resolver, \
    OPTIMIZATION := LOW, \
    CFLAGS := $(CFLAGS_JDKLIB), \
    DISABLED_WARNINGS_gcc := format-nonliteral unused-function, \
    DISABLED_WARNINGS_clang := parentheses-equality constant-logical-operand \
        format-nonliteral undef, \
    DISABLED_WARNINGS_microsoft := 4244 4047 4133 4996, \
    DISABLED_WARNINGS_solstudio := E_ARG_INCOMPATIBLE_WITH_ARG_L, \
    EXTRA_HEADER_DIRS := \
          $(call GetJavaHeaderDir, java.base) \
          java.base:libnet, \
    LDFLAGS := $(LDFLAGS_JDKLIB) \
        $(call SET_SHARED_LIBRARY_ORIGIN), \
    LDFLAGS_windows := -delayload:iphlpapi.dll, \
    LIBS_unix := -ljvm -ljava, \
    LIBS_linux := $(LIBDL) -lpthread, \
    LIBS_solaris := $(LIBDL) -lnsl -lsocket, \
    LIBS_aix := $(LIBDL),\
    LIBS_windows := ws2_32.lib jvm.lib iphlpapi.lib delayimp.lib advapi32.lib \
                    $(WIN_JAVA_LIB), \
    LIBS_macosx := -framework CoreFoundation -framework CoreServices, \
))

$(BUILD_LIBRESOLVER): $(call FindLib, java.base, java)

TARGETS += $(BUILD_LIBRESOLVER)
